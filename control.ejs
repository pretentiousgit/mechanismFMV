<script>
// Socket connects
socket.on('connect', function () {
	socket.emit('role', 'control', function (error) {
		if (!error) return;
		  socket.disconnect();
		  $('#connection').trigger('disconnected');
		  message('There is already a control connected');
		});
});

//load first round of control spots
	load_spots(0);


// Load second round of control spots
$(document).on('click', '.sendVideo', function(e){
	var nxtVid = $(this).attr('nextvid');
	console.log(nxtVid);
	
	video_play(nxtVid);

	//wipe the current control spots out
	$('#controlSpots').html('');
	//get the next set of spots
	load_spots(nxtVid);
	
	//tell the ether what to get next
	message('emitted \'' + nxtVid + '\'');
    socket.emit('control event', nxtVid);

	return default;
});   	
// end dynamics

// function list
function load_spots(spots){
	var skeleton
	$.getJSON('/tmp/gamedata.JSON', function(data){
  	$.each( data[spots].exits, function( key, val){
  		 $.each(val, function(ind,obj){
	  		 skeleton = $('<a class="sendVideo" style="">&nbsp;</a>');
	          $(skeleton).attr('nextvid', data[spots].exits[key].room);
	          $(skeleton).css('top', data[spots].exits[key].top );
	          $(skeleton).css('left', data[spots].exits[key].left );
	          $(skeleton).css('width', data[spots].exits[key].width );
	          $(skeleton).css('height', data[spots].exits[key].height );
	          $(skeleton).css('position','absolute');
	          $(skeleton).css('z-index','1');
	          $(skeleton).css('display', 'block' );
  		})
  		// load skeleton into controlspots once for each exit key
  		$('#controlSpots').append(skeleton);		  
	  })
	})
}

function video_play(to_id){
	var cur = document.getElementsByClassName('visible')[0];
	var cur_id= cur.getAttribute('id');
	var nxt = document.getElementById(to_id);
	
	console.log(cur_id +' this is cur within video_swap');
	console.log(to_id+' play this');
	console.log(cur_id+' now stopped ');

	
		nxt.classList.remove('hidden'); 
		nxt.classList.add('visible');
		nxt.setAttribute("loop","true");

		cur.classList.add('hidden');
		cur.classList.remove('visible'); // for use with selectors
		cur.removeAttribute("loop");

		if(nxt.nodeName=='VIDEO'){
			nxt.play();
		}
		if(cur.nodeName=='VIDEO'){
			cur.pause();
		}
	
};

</script>

<div class="container">
<div id='controlSpots'>
</div>
<% 
	var gamedata = JSON.parse(app.locals.gamefile);
	var datasize = Object.keys(gamedata).length;
%>
<div id='videobox'>
	
<% 
	var st = gamedata[0].urls.control;
	var ex = st.substr((~-st.lastIndexOf(".") >>> 0) + 2);
	var name = st.substr(0, st.lastIndexOf('.')) || st;

	if (ex!='png'||ex!='gif'||ex!='jpg'||ex!='jpeg') {
      %>
        <video class="visible" id="<%- gamedata[0].urls.index %>" poster="<%- gamedata[0].urls.control_thumb %>" loop="true" autoplay="true" />
        <source src="<%- name %>.ipad.mp4" type="video/mp4"/>
        <source src="<%- name %>.webm" type="video/webm" />
        Your browser does not support the video tag.
        </video>
        <br />
      <%
      	}
      	else{
      	%>
      	<img class="visible" id="<%- gamedata[0].urls.index %>" src="<%- gamedata[0].urls.control %>" />
     <%
 	}
	
	for(var i=1;i<datasize;i++){ 
		var str = gamedata[i].urls.control;
		var ext = str.substr((~-str.lastIndexOf(".") >>> 0) + 2);
		var name2 = str.substr(0, str.lastIndexOf('.')) || str;
		if (ext=='webm'||ext=='mp4') {
      %>
        <video class="hidden" id="<%- gamedata[i].urls.index %>" poster="<%- gamedata[i].urls.control_thumb %>"/>
        <source src="<%- name2 %>.ipad.mp4" type="video/mp4"/>
        <source src="<%- name2 %>.webm" type="video/webm" />
        Your browser does not support the video tag.
        </video><br />
      <%
      	}
      	else{
      	%>
      	<img class="hidden" id="<%- gamedata[i].urls.index %>" src="<%- gamedata[i].urls.control %>" />
      	<%
      	}     
	}

%>

</div>
</div>
